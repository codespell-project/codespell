# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[project]
name = "codespell"
description = "Codespell"
readme = { file = "README.rst", content-type = "text/x-rst" }
requires-python = ">=3.7"
license = {text = "GPL v2"}
authors = [
    {name = "Lucas De Marchi", email = "lucas.de.marchi@gmail.com"},
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = []
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "build",
    "chardet",
    "flake8",
    "flake8-pyproject",
    "pytest",
    "pytest-cov",
    "pytest-dependency",
    "Pygments",
    "tomli"
]
hard-encoding-detection = [
    "chardet"
]
toml = [
    "tomli; python_version < '3.11'"
]
types = [
    "chardet>=5.1.0",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-dependency",
]

[project.scripts]
codespell = "codespell_lib:_script_main"

[project.urls]
homepage = "https://github.com/codespell-project/codespell"
repository = "https://github.com/codespell-project/codespell"

[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "codespell_lib/_version.py"

[tool.setuptools.packages.find]
exclude = [
    "snap",
    "dist"
]

[tool.setuptools.package-data]
codespell_lib = [
    "data/dictionary*.txt",
    "data/linux-kernel.exclude",
    "py.typed",
]

[tool.autoflake]
in-place = true
recursive = true
expand-star-imports = true

[tool.bandit]
skip = "B101,B404,B603"
recursive = true

# TODO: reintegrate codespell configuration after updating test cases
#[tool.codespell]
#builtin = ["clear","rare","informal","usage","code","names"]
#ignore-words-list = ["uint"]
#skip=[ "./.*","codespell_lib/data/*","codespell_lib/tests/*"]

[tool.flake8]
max-line-length = "88"
extend-ignore = "E203"

[tool.isort]
profile = "black"

[tool.mypy]
pretty = true
show_error_codes = true
strict = true

[tool.pylint]
reports=false
py-version="3.7"
disable = [
          "broad-except",
          "consider-using-f-string",
          "consider-using-dict-items",
          "consider-using-with",
          "fixme",
          "import-error",
          "import-outside-toplevel",
          "invalid-name",
          "line-too-long",
          "missing-class-docstring",
          "missing-module-docstring",
          "missing-function-docstring",
          "no-else-raise",
          "no-else-return",
          "raise-missing-from",
          "redefined-outer-name",
          "subprocess-run-check",
          "too-many-arguments",
          "too-many-lines",
          "too-many-locals",
          "too-many-branches",
          "too-many-statements",
          "too-many-return-statements",
          "too-few-public-methods",
          "unneeded-not",
          "unspecified-encoding",
          "unused-argument",
          "unused-variable",
          "use-maxsplit-arg"
]


[tool.pylint.FORMAT]
good-names=["F","r","i","n"]
# include-naming-hint=yes

[tool.pytest.ini_options]
addopts = "--cov=codespell_lib -rs --cov-report= --tb=short --junit-xml=junit-results.xml"
